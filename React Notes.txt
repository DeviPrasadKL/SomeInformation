Create React applicaton
npx create-react-app my-app
--------------------------------------------------------

Document which returns JSX (JavaScript + XML(Extensible markup language)) is called as Component
In JSX we can create customized tags
JSX is a special value, since Node js will not understand jsx value, we use Babble to convert that to normal value
npm = node package manager
npx = node package extension
Js-HTML-JS---> Js (HTMl) JS
HTML-Js-HTML-->HTML {Js} HTML

By Creating document extension as jsx, we can get both html and JavaScript snippets.

box-sizing = border box (Border remains contant)
Box model flow-->
1) background 
2) Dimension
3) Spacing
4) Border 
5) Shadow 

Inline Css:-
let s = {
    property1 : "value1",
    property2 : "value2"
}
<tag style={"s"} > </tag>

----------------------------------------------------------
let a = [1,2,3,4,5];
a.map((va;ie, index, arrayName)=> {
    return (<h1>{value}</h1>);
})
Output:- 1 2 3 4 5 one by one

----------------------------------------------------------
To start json server:-(need net)
npx json-server --watch db.json

TO host on different port number
npx json-server --watch db.json --port 4000
----------------------------------------------------------
When we have wrong api then we will get an empty data ( i.e, {} )
 --------------------------------------------------------
npm install  react-router-dom@5
or we can just install latest react-router-dom

 ------Default object adding to database-----------------
 let handleAddMovie = (e) => {

    e.preventDefault();
    let newMovie = { movieName, hero, gener, rating, poster }

    const api = "http://localhost:400/movies";

    const options = {method:"POST", 
                    headers:{"Content-Type":"applicaton/json"},
                    body:JSON.stringify(newMovie)
                    }
                
    fetch(api,options)
    .then(()=>{
    alert("new Movie Added Succesfully")
    h.push("/")
    })
 }
 -----------------------------------------------------------
How to use Axios:-

1) npm install axios --save
2) import axios
3) axios.get("url").then(res => {
}).catch(err =>{
})
 -----------------------------------------------------------
To Deploy React JS project on git Hub
1) npm install gh-pages --save-dev
2) git remote add origin "Add Link of git hub repo" (https://github.com/Yousurya/Anime.git)
2.1) Update this in package,json
	"homepage": "https://yousurya.github.io/Text-Utility",
	AND INCLUDE THIS IN SCRIPTS 
	"predeploy": "npm run build",
    	"deploy": "gh-pages -d build",
3) npm run deploy
 
 -----------------------------------------------------------

